# Configure a default setup
default_config:

# Yamls
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

frontend:
  themes: !include themes.yaml

homeassistant:
  customize: !include customize.yaml
  packages: !include_dir_named packages

lovelace:
  mode: yaml

# Input
input_select: !include input_select.yaml

recorder:
  purge_keep_days: 2
  db_url: postgresql://postgres:postgres@postgresql.postgresql.svc.cluster.local/postgres

# Influxdb
influxdb:
  host: influxdb.metrics
  database: homeassistant

http:

# Device tracker
device_tracker:
  - platform: luci
    host: 192.168.1.1:8080
    username: root
    password: !secret luci  
    new_device_defaults:
      track_new_devices: false

# Zones
zone:
  - name: Poczta
    latitude: 50.2568931
    longitude: 19.0168151
    radius: 250
    icon: mdi:account-hard-hat

  - name: Yakudo
    latitude: 49.957991
    longitude: 18.964889
    radius: 250
    icon: mdi:account-hard-hat  

# This will override the default home zone
  - name: Home
    latitude: 50.2985936
    longitude: 19.04179
    radius: 250
    icon: mdi:home

# Google tts
tts:
  - platform: google_cloud
    key_file: homeassistant-google.json
    language: pl-PL
    gender: male
    voice: pl-PL-Wavenet-E
    encoding: linear16
    speed: 1.0
    pitch: 0.0
    gain: 0.0
    profiles:
      - telephony-class-application
      - wearable-class-device

# Amazon Alexa
alexa_media:
  accounts:
    - email: !secret amazon_user
      password: !secret amazon_password
      url: amazon.com
      include_devices:
        - "echo"

notify:
  - platform: alexa_media
    name: alexa_media

alexa:
  smart_home:
    locale: en-US
    endpoint: https://api.amazonalexa.com/v3/events
    client_id: !secret alexa_client_id
    client_secret: !secret alexa_client_secret
    filter:
      include_entities:
        - light.aqaralampchildroom_light
        - light.ikeabulblamp_light
        - switch.washermachine_relay
        - script.miio_turn_on_yamaha
        - script.miio_turn_on_yamaha_radio
        - script.miio_turn_on_nc
        - switch.light1_relay
        - switch.light2_relay
        - switch.light3_relay
        - light.osrambulbsgrouptoilet
        - light.ikeabulbsgrouptoiletmirror
        - light.ikeabulbsgroupwardobe
        - script.miio_turn_on_yamaha_hdmi1
        - script.miio_turn_on_yamaha_hdmi2
        - light.lamp_kitchen
        - light.ikeabulbsgroupkitchen
        - light.ikeabulbsgroupanteroom1
        - light.ikeabulbsgroupanteroom2
        - scene.good_evening
        - scene.good_morning
        - scene.good_night
        - scene.cinema
        - media_player.tv
        - fan.air_purifier
        - binary_sensor.toiletdoor_contact
        - binary_sensor.maindoor_contact
        - binary_sensor.motionkitchen_occupancy
        - binary_sensor.motionkitchen2_occupancy
        - binary_sensor.motiontoilet_occupancy
        - binary_sensor.motionchildroom_occupancy
        - binary_sensor.livingroomwindow_contact
        - binary_sensor.livingroombalconywindow_contact
        - binary_sensor.childroomwindow_contact
        - binary_sensor.kitchenwindow_contact
        - binary_sensor.wardobewindow_contact
        - binary_sensor.doorbell
    entity_config:
      light.aqaralampchildroom_light:
        name: "Lamp"
      light.ikeabulblamp_light:
        name: "Lamp"
      switch.washermachine_relay:
        name: "Washermachine"
      script.miio_turn_on_yamaha:
        name: "Yamaha"
        display_categories: SWITCH
      script.miio_turn_on_yamaha_radio:
        name: "Radio"
        display_categories: SWITCH
      script.miio_turn_on_nc:
        name: "NC"
        display_categories: SWITCH
      switch.light1_relay:
        name: "Light 1"
        display_categories: LIGHT
      switch.light2_relay:
        name: "Light 2"
        display_categories: LIGHT
      switch.light3_relay:
        name: "Light 3"
        display_categories: LIGHT
      light.osrambulbsgrouptoilet:
        name: "Light"
      light.ikeabulbsgrouptoiletmirror:
        name: "Mirror"
      light.ikeabulbsgroupwardobe:
        name: "Light"
      light.lamp_kitchen:
        name: "Light"
      light.ikeabulbsgroupkitchen:
        name: "Table"
      light.ikeabulbsgroupanteroom1:
        name: "Light 1"
      light.ikeabulbsgroupanteroom2:
        name: "Light 2"
      script.miio_turn_on_yamaha_hdmi1:
        name: "HDMI1"
        display_categories: SWITCH
      script.miio_turn_on_yamaha_hdmi2:
        name: "HDMI2"
        display_categories: SWITCH        
      scene.good_evening:
        name: "Good Night"
        display_categories: SCENE
      scene.good_morning:
        name: "Good Morning"
        display_categories: SCENE
      scene.good_night:
        name: "Good Night"
        display_categories: SCENE
      scene.cinema:
        name: "Cinema"
        display_categories: SCENE
      climate.thermochildroom_climate:
        name: "Thermo"
      climate.thermolivingroom_climate:
        name: "Thermo"
      media_player.tv:
        name: TV
      fan.air_purifier:
        name: Airpurifier
      binary_sensor.toiletdoor_contact:
        name: Toilet Door
        display_categories: DOOR
      binary_sensor.maindoor_contact:
        name: Main Door
        display_categories: DOOR
      binary_sensor.motionkitchen_occupancy:
        name: Motion 
        display_categories: MOTION_SENSOR
      binary_sensor.motionkitchen2_occupancy:
        name: Motion
        display_categories: MOTION_SENSOR
      binary_sensor.motiontoilet_occupancy: 
        name: Motion
        display_categories: MOTION_SENSOR
      binary_sensor.motionchildroom_occupancy:  
        name: Motion
        display_categories: MOTION_SENSOR
      binary_sensor.livingroomwindow_contact:
        name: Window
        display_categories: CONTACT_SENSOR
      binary_sensor.livingroombalconywindow_contact:
        name: Balcony
        display_categories: CONTACT_SENSOR
      binary_sensor.childroomwindow_contact:
        name: Window
        display_categories: CONTACT_SENSOR
      binary_sensor.kitchenwindow_contact:
        name: Window
        display_categories: CONTACT_SENSOR
      binary_sensor.wardobewindow_contact:
        name: Window
        display_categories: CONTACT_SENSOR
      binary_sensor.doorbell:
        name: Doorbell
        display_categories: DOORBELL

# HomeKit
homekit:
  advertise_ip: "192.168.1.2"
  port: 51827
  filter:
    include_entities:
      - light.aqaralampchildroom_light
      - light.ikeabulblamp_light
      - switch.washermachine_relay
      - script.miio_turn_on_yamaha
      - script.miio_turn_on_yamaha_radio
      - script.miio_turn_on_nc
      - switch.light1_relay
      - switch.light2_relay
      - switch.light3_relay
      - switch.thermoseason
      - sensor.mi_humidity
      - sensor.mi_temperature
      - light.osrambulbsgrouptoilet
      - light.ikeabulbsgrouptoiletmirror
      - light.ikeabulbsgroupwardobe
      - script.miio_turn_on_yamaha_hdmi1
      - script.miio_turn_on_yamaha_hdmi2
      - air_quality.airly
      - binary_sensor.toiletdoor_contact
      - binary_sensor.livingroomwindow_contact
      - binary_sensor.maindoor_contact
      - binary_sensor.livingroombalconywindow_contact
      - binary_sensor.childroomwindow_contact
      - binary_sensor.kitchenwindow_contact
      - binary_sensor.wardobewindow_contact
      - binary_sensor.leaksensorkitchen_water_leak
      - binary_sensor.leaksensortoilet_water_leak
      - binary_sensor.motionkitchen_occupancy
      - binary_sensor.motionkitchen2_occupancy
      - binary_sensor.motiontoilet_occupancy
      - binary_sensor.motionchildroom_occupancy
      - light.lamp_kitchen
      - light.ikeabulbsgroupkitchen
      - light.ikeabulbsgroupanteroom1
      - light.ikeabulbsgroupanteroom2
      - device_tracker.iphone_luci_andrzej
      - device_tracker.xiaomired_luci_ania
      - scene.good_evening
      - scene.good_morning
      - scene.good_night
      - scene.cinema
      - climate.thermochildroom_climate
      - climate.thermolivingroom_climate
      - media_player.tv
      - fan.air_purifier
  entity_config:
    media_player.tv:
      feature_list:
        - feature: on_off

# TV
webostv:
    name: tv
    host: 192.168.1.6
    turn_on_action:
      - service: remote.send_command
        entity_id: 'remote.xiaomi_miio_192_168_0_179'
        data:
          command:
          - raw:Z6VHACsCAACjBgAAyggAAI4RAAA9IwAACJ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAQAAAAAAAQEAAQEBAQEAAAABAAAAAAEBAQABAQEBBQJAA='  
    customize:
      sources:
        - livetv
        - hdmi1
        - youtube
        - netflix  

# Speed test
speedtestdotnet:
  scan_interval:
    minutes: 30
  monitored_conditions:
    - ping
    - download
    - upload

# Remotes    
remote:
  - platform: xiaomi_miio
    host: 192.168.1.3    
    token: e97db4b3d0ffd51e6eda924b270fb2e4
    slot: 1
    timeout: 30
    hidden: false
    commands:
      yamaha:
        command:
          - raw:Z6VDADcCAAB3BgAAaBEAAAwjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjABAAEBAQEAAQABAAAAAAEBAAABAAAAAAABAQABAQEAAA

# Airpurifier
fan:
  - platform: xiaomi_miio
    host: 192.168.1.7
    token: ca40b830acc8cff3afff41db1d31aab6
    name: Air Purifier     

# Template for switches and xiaomi ir, no light ;)
light:
  - platform: template
    lights:
      yamaha:
        friendly_name: "Yamaha"
        value_template: "{% if states('sensor.yamaha_power') | float > 20 %}True{%else%}False{%endif %}"
        turn_on:
          service: script.miio_turn_on_yamaha
        turn_off:
          service: script.miio_turn_on_yamaha  

  - platform: template
    lights:
      radio:
        friendly_name: "Radio"
        value_template: "{% if states('sensor.yamaha_power') | float > 100 %}True{%else%}False{%endif %}"
        turn_on:
          service: script.miio_turn_on_yamaha_radio
        turn_off:
          service: script.miio_turn_on_yamaha_radio

  - platform: template
    lights:
      hdmi1:
        friendly_name: "HDMI1"
        value_template: "{% if states('sensor.yamaha_power') | float > 100 %}True{%else%}False{%endif %}"
        turn_on:
          service: script.miio_turn_on_yamaha_hdmi1
        turn_off:
          service: script.miio_turn_on_yamaha_hdmi1

  - platform: template
    lights:
      hdmi2:
        friendly_name: "HDMI2"
        value_template: "{% if states('sensor.yamaha_power') | float > 100 %}True{%else%}False{%endif %}"
        turn_on:
          service: script.miio_turn_on_yamaha_hdmi2
        turn_off:
          service: script.miio_turn_on_yamaha_hdmi2

  - platform: template
    lights:
      nc:
        friendly_name: "NC"
        value_template: "{% if states('sensor.yamaha_power') | float > 100 %}True{%else%}False{%endif %}"
        turn_on:
          service: script.miio_turn_on_nc
        turn_off:
          service: script.miio_turn_on_nc

# Zigbee2mqtt group lights
  - platform: mqtt
    schema: json
    name: OsramBulbsGroupToilet
    command_topic: "zigbee2mqtt/group_1_toilet_1/set"
    state_topic: "zigbee2mqtt/group_1_toilet_1"
    brightness: true

  - platform: mqtt
    schema: json
    name: IkeaBulbsGroupAnteroom1
    command_topic: "zigbee2mqtt/group_2_anteroom_1/set"
    state_topic: "zigbee2mqtt/group_2_anteroom_1" 
    brightness: true

  - platform: mqtt
    schema: json
    name: IkeaBulbsGroupAnteroom2
    command_topic: "zigbee2mqtt/group_3_anteroom_2/set"
    state_topic: "zigbee2mqtt/group_3_anteroom_2" 
    brightness: true

  - platform: mqtt
    schema: json
    name: IkeaBulbsGroupKitchen
    command_topic: "zigbee2mqtt/group_4_kitchen_1/set"
    state_topic: "zigbee2mqtt/group_4_kitchen_1"
    brightness: true  

  - platform: mqtt
    schema: json
    name: IkeaBulbsGroupToiletMirror
    command_topic: "zigbee2mqtt/group_5_toilet_2/set"
    state_topic: "zigbee2mqtt/group_5_toilet_2"
    brightness: true     

  - platform: mqtt
    schema: json
    name: IkeaBulbsGroupWardobe
    command_topic: "zigbee2mqtt/group_6_wardobe_1/set"
    state_topic: "zigbee2mqtt/group_6_wardobe_1"
    brightness: true 

# Single
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/IkeaBulbToiletMirror"
    availability_topic: "zigbee2mqtt/bridge/state"
    schema: "json"
    command_topic: "zigbee2mqtt/IkeaBulbToiletMirror/set"  
    brightness: true
    color_temp: false
    rgb: false
   
#Sensors
sensor:
# Zigbee Network Map
  - platform: mqtt
    name: Zigbee2mqtt Networkmap
    # if you change base_topic of Zigbee2mqtt, change state_topic accordingly
    state_topic: zigbee2mqtt/bridge/networkmap/raw
    value_template: >-
      {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
    # again, if you change base_topic of Zigbee2mqtt, change json_attributes_topic accordingly
    json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw  

# Dishwasher
  - platform: integration
    source: sensor.dishwasher_power
    name: "Dishwasher Energy"
    unit_prefix: k
    round: 2  
  
  - platform: template
    sensors:
      dishwasher:
        friendly_name: "Dishwasher"
        value_template: >-
          {% if states('sensor.dishwasher_power') != ('unavailable' or 'unknown') %}
            {% if states('sensor.dishwasher_power') | int > 3 %}
              washing
            {% else %}
              disable
            {% endif %}
          {% else %}
            {{ states('sensor.dishwasher') }}
          {% endif %}

# Washermachine
  - platform: integration
    source: sensor.washermachine_power
    name: "Washermachine Energy"
    unit_prefix: k
    round: 2  
  
  - platform: template
    sensors:
      washermachine:
        friendly_name: "Washermachine"
        value_template: >-
          {% if states('sensor.washermachine_power') != ('unavailable' or 'unknown') %}
            {% if states('sensor.washermachine_power') | int > 3 %}
              washing
            {% else %}
              disable
            {% endif %}
          {% else %}
            {{ states('sensor.washermachine') }}
          {% endif %}     

# Airly
  - platform: template
    sensors:
      airly_aqi:
        friendly_name: "Airly AQI"
        # entity_id: air_quality.airly
        unit_of_measurement: 'AQI'
        value_template: "{{ state_attr('air_quality.airly', 'air_quality_index') }}"

      airly_pm10:
        friendly_name: "Airly PM10"
        # entity_id: air_quality.airly
        unit_of_measurement: 'µg/m³'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_10') }}"

      airly_pm2_5:
        friendly_name: "Airly PM2.5"
        # entity_id: air_quality.airly
        unit_of_measurement: 'µg/m³'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_2_5') }}"

      airly_advice:
        friendly_name: "Airly advice"
        # entity_id: air_quality.airly
        value_template: "{{ state_attr('air_quality.airly', 'advice') }}"

      airly_aqi_level:
        friendly_name: "Airly AQI level"
        # entity_id: air_quality.airly
        value_template: "{{ state_attr('air_quality.airly', 'air_quality_index_level') }}"

      airly_pm2_5_limit:
        friendly_name: "Airly PM2.5 limit"
        # entity_id: air_quality.airly
        unit_of_measurement: 'µg/m³'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_2_5_limit') }}"

      airly_pm2_5_percent:
        friendly_name: "PM2.5 limit"
        # entity_id: air_quality.airly
        unit_of_measurement: '%'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_2_5_percent_of_limit') }}"

      airly_pm10_limit:
        friendly_name: "Airly PM10 limit"
        # entity_id: air_quality.airly
        unit_of_measurement: 'µg/m³'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_10_limit') }}"

      airly_pm10_percent:
        friendly_name: "PM10 limit"
        # entity_id: air_quality.airly
        unit_of_measurement: '%'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_10_percent_of_limit') }}" 
        
      thermostat_livingroom_temperature:
        friendly_name: "Living Room Temperature"
        unit_of_measurement: '°C'
        value_template: "{{ states.climate.thermolivingroom_climate.attributes.current_temperature }}"

      thermostat_childroom_temperature:
        friendly_name: "Child Room Temperature"
        unit_of_measurement: '°C'
        value_template: "{{ states.climate.thermochildroom_climate.attributes.current_temperature }}"

# Xiaomi Air Purifier
  - platform: template
    sensors:
      mi_aqi:
        friendly_name: "Air Purifier"
        unit_of_measurement: 'AQI'
        value_template: "{{ state_attr('fan.air_purifier', 'aqi') }}"
      mi_humidity:
        friendly_name: "Humidity"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('fan.air_purifier', 'humidity') }}"
      mi_temperature:
        friendly_name: "Temperature"
        unit_of_measurement: '°C'
        value_template: "{{ state_attr('fan.air_purifier', 'temperature') }}"   
      mi_rpm:
        friendly_name: "Air RPM"
        unit_of_measurement: 'RPM'
        value_template: "{{ state_attr('fan.air_purifier', 'motor_speed') }}"     
      mi_led:
        value_template: '{{ states.fan.air_purifier.attributes.led }}'    

# Weather 
  - platform: template
    sensors:
      wind:
        friendly_name: "Wind"
        unit_of_measurement: "km/h"
        value_template: "{{ state_attr('weather.home', 'wind_speed') }}"

# Binary sensor
binary_sensor:
  - platform: workday
    country: PL
    workdays: [mon, tue, wed, thu, fri]
    excludes: [sat, sun, holiday]
    add_holidays:
      - '2020-05-01'
      - '2020-05-02'
      - '2020-05-03'
      - '2020-12-25'
      - '2020-12-26'

  - platform: template
    sensors:
      doorbell:
        friendly_name: "Doorbell"
        delay_off:
          minutes: 2
        value_template: >-
          {{ is_state('sensor.ringvibration_action', 'vibration') }}
        icon_template: >-
          {% if is_state("binary_sensor.doorbell", "on") %}
            mdi:bell-ring
          {% else %}
            mdi:bell
          {% endif %}

# Storm day
  - platform: burze_dzis_net
    api_key: !secret burze_dzis_net.api_key
    latitude: 50.2985936
    longitude: 19.04179
    warnings:
      - frost_warning
      - heat_warning
      - wind_warning
      - precipitation_warning
      - storm_warning
    storms_nearby:
      radius: 15

# Switches
switch:
  - platform: template
    switches:
      airpurifiermax:
        friendly_name: "Air Max"
        value_template: "{{ is_state_attr('fan.air_purifier', 'mode', 'favorite' ) }}"
        turn_on:
            - entity_id: fan.air_purifier
              service: fan.turn_on
            - entity_id: fan.air_purifier
              service: fan.set_speed
              data:
                speed: favorite
            - service: xiaomi_miio.fan_set_favorite_level    
              data_template:
                entity_id: fan.air_purifier
                level: 14
        turn_off:
            - entity_id: fan.air_purifier
              service: fan.set_speed
              data:
                speed: auto

  - platform: template
    switches:
      airpurifierled:
        friendly_name: "Air Led"
        value_template: "{{ is_state('sensor.mi_led', 'True') }}"
        turn_on:
          service: xiaomi_miio.fan_set_led_on
          data:
            entity_id: fan.air_purifier 
        turn_off:
          service: xiaomi_miio.fan_set_led_off
          data:
            entity_id: fan.air_purifier
        icon_template: >-
                  {% if is_state('sensor.mi_led', 'True') %}
                    mdi:led-on
                  {% else %}
                    mdi:led-off
                  {% endif %}              

  - platform: template
    switches:
      thermoseason:
        friendly_name: "Thermo Season"
        value_template: "{{ is_state('input_select.thermo_season', 'ON') }}"
        turn_on:
          - service: input_select.select_option
            data:
              entity_id: input_select.thermo_season
              option: "ON"
        turn_off:
          - service: input_select.select_option
            data:
              entity_id: input_select.thermo_season
              option: "OFF"
        icon_template: >-
                  {% if is_state('input_select.thermo_season', 'ON') %}
                    mdi:radiator
                  {% else %}
                    mdi:radiator-disabled
                  {% endif %} 


