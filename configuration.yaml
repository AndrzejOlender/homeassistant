# Configure a default setup
default_config:

recorder:
  purge_keep_days: 90
  db_url: mysql://homeassistant:M1styf1kacj4!@127.0.0.1/homeassistant?charset=utf8

influxdb:
  host: 127.0.0.1
  database: homeassistant

http:
  base_url: https://olender.duckdns.org:8123
  ssl_certificate: /config/ssl/fullchain.pem
  ssl_key: /config/ssl/privkey.pem

device_tracker:
  - platform: luci
    host: 192.168.1.1
    username: root
    password: !secret luci  

zone:
  - name: Poczta
    latitude: 50.2568931
    longitude: 19.0168151
    radius: 250
    icon: mdi:worker

  - name: Yakudo
    latitude: 50.0940742
    longitude: 18.9904136
    radius: 250
    icon: mdi:worker  

  # This will override the default home zone
  - name: Home
    latitude: 50.2985936
    longitude: 19.04179
    radius: 250
    icon: mdi:home
  
homekit:
  filter:
    include_entities:
      - light.aqaralampchildroom_light
      - light.ikeabulblamp_light
      - switch.washermachine_relay
      - media_player.tv
      - script.miio_turn_on_yamaha
      - script.miio_turn_on_yamaha_radio
      - script.miio_turn_on_nc
      - switch.shelly_02
      - switch.shelly_01
      - switch.shelly_001
      - light.osrambulbsgrouptoilet
      - light.ikeabulbsgrouptoiletmirror
      - light.ikeabulbsgroupwardobe
      - script.miio_turn_on_yamaha_hdmi1
      - script.miio_turn_on_yamaha_hdmi2
      - air_quality.airly
      - binary_sensor.toiletdoor_contact
      - binary_sensor.livingroomwindow_contact
      - binary_sensor.maindoor_contact
      - binary_sensor.livingroombalconywindow_contact
      - binary_sensor.childroomwindow_contact
      - binary_sensor.kitchenwindow_contact
      - binary_sensor.leaksensorkitchen_water_leak
      - binary_sensor.leaksensortoilet_water_leak
      - binary_sensor.motionkitchen_occupancy
      - binary_sensor.motionkitchen2_occupancy
      - binary_sensor.motiontoilet_occupancy
      - light.lamp_kitchen
      - light.ikeabulbsgroupkitchen
      - light.ikeabulbsgroupanteroom1
      - light.ikeabulbsgroupanteroom2
      - device_tracker.iphone_luci_andrzej
      - device_tracker.xiaomired_luci_ania
      - scene.good_evening
      - scene.good_morning
      - scene.good_night
      - climate.thermochildroom_climate
      - climate.thermolivingroom_climate
      - media_player.lg
      - fan.air_purifier   

webostv:
    name: LG
    host: 192.168.1.6
    turn_on_action:
      - service: remote.send_command
        entity_id: 'remote.xiaomi_miio_192_168_0_179'
        data:
          command:
          - raw:Z6VHACsCAACjBgAAyggAAI4RAAA9IwAACJ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAQAAAAAAAQEAAQEBAQEAAAABAAAAAAEBAQABAQEBBQJAA='  
    customize:
      sources:
        - livetv
        - hdmi1
        - youtube
        - netflix      

speedtestdotnet:
  scan_interval:
    minutes: 30
  monitored_conditions:
    - ping
    - download
    - upload

### Yamls
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

frontend:
    themes: !include themes.yaml
homeassistant:
    customize: !include customize.yaml

lovelace:
  mode: yaml

# Remotes    
remote:
  - platform: xiaomi_miio
    host: 192.168.1.3    
    token: e97db4b3d0ffd51e6eda924b270fb2e4
    slot: 1
    timeout: 30
    hidden: false
    commands:
      yamaha:
        command:
          - raw:Z6VDADcCAAB3BgAAaBEAAAwjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjABAAEBAQEAAQABAAAAAAEBAAABAAAAAAABAQABAQEAAA

fan:
  - platform: xiaomi_miio
    host: 192.168.1.7
    token: b6101395cc2be06198c1459824317207
    name: Air Purifier     

# Template for switches and xiaomi ir, no light ;)
light:
  - platform: template
    lights:
      yamaha:
        friendly_name: "Yamaha"
        value_template: "{% if states('sensor.yamaha_power') | float > 20 %}True{%else%}False{%endif %}"
        turn_on:
          service: script.miio_turn_on_yamaha
        turn_off:
          service: script.miio_turn_on_yamaha  

  - platform: template
    lights:
      radio:
        friendly_name: "Radio"
        value_template: "{% if states('sensor.yamaha_power') | float > 100 %}True{%else%}False{%endif %}"
        turn_on:
          service: script.miio_turn_on_yamaha_radio
        turn_off:
          service: script.miio_turn_on_yamaha_radio

  - platform: template
    lights:
      hdmi1:
        friendly_name: "HDMI1"
        value_template: "{% if states('sensor.yamaha_power') | float > 100 %}True{%else%}False{%endif %}"
        turn_on:
          service: script.miio_turn_on_yamaha_hdmi1
        turn_off:
          service: script.miio_turn_on_yamaha_hdmi1

  - platform: template
    lights:
      hdmi2:
        friendly_name: "HDMI2"
        value_template: "{% if states('sensor.yamaha_power') | float > 100 %}True{%else%}False{%endif %}"
        turn_on:
          service: script.miio_turn_on_yamaha_hdmi2
        turn_off:
          service: script.miio_turn_on_yamaha_hdmi2

  - platform: template
    lights:
      nc:
        friendly_name: "NC"
        value_template: "{% if states('sensor.yamaha_power') | float > 100 %}True{%else%}False{%endif %}"
        turn_on:
          service: script.miio_turn_on_nc
        turn_off:
          service: script.miio_turn_on_nc

# Zigbee2mqtt group lights
  - platform: mqtt
    schema: json
    name: OsramBulbsGroupToilet
    command_topic: "zigbee2mqtt/group_1_toilet_1/set"
    state_topic: "zigbee2mqtt/group_1_toilet_1"
    brightness: true

  - platform: mqtt
    schema: json
    name: IkeaBulbsGroupAnteroom1
    command_topic: "zigbee2mqtt/group_2_anteroom_1/set"
    state_topic: "zigbee2mqtt/group_2_anteroom_1" 
    brightness: true

  - platform: mqtt
    schema: json
    name: IkeaBulbsGroupAnteroom2
    command_topic: "zigbee2mqtt/group_3_anteroom_2/set"
    state_topic: "zigbee2mqtt/group_3_anteroom_2" 
    brightness: true

  - platform: mqtt
    schema: json
    name: IkeaBulbsGroupKitchen
    command_topic: "zigbee2mqtt/group_4_kitchen_1/set"
    state_topic: "zigbee2mqtt/group_4_kitchen_1"
    brightness: true  

  - platform: mqtt
    schema: json
    name: IkeaBulbsGroupToiletMirror
    command_topic: "zigbee2mqtt/group_5_toilet_2/set"
    state_topic: "zigbee2mqtt/group_5_toilet_2"
    brightness: true     

  - platform: mqtt
    schema: json
    name: IkeaBulbsGroupWardobe
    command_topic: "zigbee2mqtt/group_6_wardobe_1/set"
    state_topic: "zigbee2mqtt/group_6_wardobe_1"
    brightness: true 

# Single
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/IkeaBulbToiletMirror"
    availability_topic: "zigbee2mqtt/bridge/state"
    schema: "json"
    command_topic: "zigbee2mqtt/IkeaBulbToiletMirror/set"  
    brightness: true
    color_temp: false
    rgb: false
   
### Sensors
sensor:
# Lights Shelly 1
  - platform: mqtt
    name: "Light 1"
    state_topic: "shelly-02/tele/SENSOR"
    value_template: "{{ value_json.ENERGY.Power[0] }}"
    unit_of_measurement: "W"

# Lights Shelly 2
  - platform: mqtt
    name: "Light 2"
    state_topic: "shelly-01/tele/SENSOR"
    value_template: "{{ value_json.ENERGY.Power[0] }}"
    unit_of_measurement: "W"    

# Lights Shelly 3
  - platform: mqtt
    name: "Light 3"
    state_topic: "shelly-01/tele/SENSOR"
    value_template: "{{ value_json.ENERGY.Power[1] }}"
    unit_of_measurement: "W"

# Zigbee Network Map
  - platform: mqtt
    name: Zigbee2mqtt Networkmap
    # if you change base_topic of Zigbee2mqtt, change state_topic accordingly
    state_topic: zigbee2mqtt/bridge/networkmap/raw
    value_template: >-
      {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
    # again, if you change base_topic of Zigbee2mqtt, change json_attributes_topic accordingly
    json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw  

# Dishwasher
  - platform: integration
    source: sensor.dishwasher_power
    name: "Dishwasher Energy"
    unit_prefix: k
    round: 2  
  
  - platform: template
    sensors:
      dishwasher:
        friendly_name: "Dishwasher"
        value_template: >-
          {% if states('sensor.dishwasher_power') != ('unavailable' or 'unknown') %}
            {% if states('sensor.dishwasher_power') | int > 3 %}
              washing
            {% else %}
              disable
            {% endif %}
          {% else %}
            {{ states('sensor.dishwasher') }}
          {% endif %}

# Washermachine
  - platform: integration
    source: sensor.washermachine_power
    name: "Washermachine Energy"
    unit_prefix: k
    round: 2  
  
  - platform: template
    sensors:
      washermachine:
        friendly_name: "Washermachine"
        value_template: >-
          {% if states('sensor.washermachine_power') != ('unavailable' or 'unknown') %}
            {% if states('sensor.washermachine_power') | int > 3 %}
              washing
            {% else %}
              disable
            {% endif %}
          {% else %}
            {{ states('sensor.washermachine') }}
          {% endif %}     

# Airly
  - platform: template
    sensors:
      airly_aqi:
        friendly_name: "Airly AQI"
        entity_id: air_quality.airly
        unit_of_measurement: 'AQI'
        value_template: "{{ state_attr('air_quality.airly', 'air_quality_index') }}"

      airly_pm10:
        friendly_name: "Airly PM10"
        entity_id: air_quality.airly
        unit_of_measurement: 'µg/m³'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_10') }}"

      airly_pm2_5:
        friendly_name: "Airly PM2.5"
        entity_id: air_quality.airly
        unit_of_measurement: 'µg/m³'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_2_5') }}"

      airly_advice:
        friendly_name: "Airly advice"
        entity_id: air_quality.airly
        value_template: "{{ state_attr('air_quality.airly', 'advice') }}"

      airly_aqi_level:
        friendly_name: "Airly AQI level"
        entity_id: air_quality.airly
        value_template: "{{ state_attr('air_quality.airly', 'air_quality_index_level') }}"

      airly_pm2_5_limit:
        friendly_name: "Airly PM2.5 limit"
        entity_id: air_quality.airly
        unit_of_measurement: 'µg/m³'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_2_5_limit') }}"

      airly_pm2_5_percent:
        friendly_name: "PM2.5 limit"
        entity_id: air_quality.airly
        unit_of_measurement: '%'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_2_5_percent_of_limit') }}"

      airly_pm10_limit:
        friendly_name: "Airly PM10 limit"
        entity_id: air_quality.airly
        unit_of_measurement: 'µg/m³'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_10_limit') }}"

      airly_pm10_percent:
        friendly_name: "PM10 limit"
        entity_id: air_quality.airly
        unit_of_measurement: '%'
        value_template: "{{ state_attr('air_quality.airly', 'particulate_matter_10_percent_of_limit') }}" 
        
      thermostat_livingroom_temperature:
        friendly_name: "Living Room Temperature"
        unit_of_measurement: '°C'
        value_template: "{{ states.climate.thermolivingroom_climate.attributes.current_temperature }}"

      thermostat_childroom_temperature:
        friendly_name: "Child Room Temperature"
        unit_of_measurement: '°C'
        value_template: "{{ states.climate.thermochildroom_climate.attributes.current_temperature }}"

# Xiaomi Air Purifier
  - platform: template
    sensors:
      mi_aqi:
        friendly_name: "Air Purifier"
        unit_of_measurement: 'AQI'
        value_template: "{{ state_attr('fan.air_purifier', 'aqi') }}"
      mi_humidity:
        friendly_name: "Humidity"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('fan.air_purifier', 'humidity') }}"
      mi_temperature:
        friendly_name: "Temperature"
        unit_of_measurement: '°C'
        value_template: "{{ state_attr('fan.air_purifier', 'temperature') }}"   
      mi_rpm:
        friendly_name: "Air RPM"
        unit_of_measurement: 'RPM'
        value_template: "{{ state_attr('fan.air_purifier', 'motor_speed') }}"       

# Binary sensor
binary_sensor:
  - platform: workday
    country: PL
    workdays: [mon, tue, wed, thu, fri]
    excludes: [sat, sun, holiday]
    add_holidays:
      - '2020-05-01'
      - '2020-05-02'
      - '2020-05-03'
      - '2020-12-25'
      - '2020-12-26'

# Switch
switch:
  - platform: template
    switches:
      airpurifiermax:
        friendly_name: "Air Max"
        value_template: "{{ is_state_attr('fan.air_purifier', 'mode', 'favorite' ) }}"
        turn_on:
            - entity_id: fan.air_purifier
              service: fan.turn_on
            - entity_id: fan.air_purifier
              service: fan.set_speed
              data:
                speed: favorite
            - service: xiaomi_miio.fan_set_favorite_level    
              data_template:
                entity_id: fan.air_purifier
                level: 14
        turn_off:
            - entity_id: fan.air_purifier
              service: fan.set_speed
              data:
                speed: auto     
