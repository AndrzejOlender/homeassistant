- alias: Notification Open Main Door
  trigger:
    - platform: state
      entity_id: binary_sensor.maindoor_contact
      from: "off"
      to: "on"
      for:
        minutes: 1
  action:
    - service: sonos.snapshot
      entity_id: all
    - service: notify.sonos
      data:
        message: "Uwaga! otwarte drzwi wejściowe."
    - delay:
        seconds: 5
    - service: sonos.restore
      entity_id: all
    - service: notify.mobile_app_iphone
      data:
        title: "Door"
        message: "Open Main Door"
        data:
          push:
            sound: default
    - service: notify.tv
      data:
        message: "Open Main Door"
    - service: notify.mobile_app_xiaomi
      data:
        message: "Open Main Door"
    # - service: media_player.play_media
    #   data:
    #     entity_id: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     media_content_type: sound
    #     media_content_id: amzn_sfx_doorbell_chime_01
    # - service: notify.alexa_media
    #   data:
    #     target: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     data:
    #       type: tts
    #     message: "Open Main Door"

- alias: Send Notification Enter Home
  trigger:
    platform: state
    entity_id: binary_sensor.maindoor_contact
    from: "off"
    to: "on"
    # for:
    #   minutes: 1
  condition:
    - condition: state
      entity_id: device_tracker.iphone_luci_andrzej
      state: "not_home"
    - condition: state
      entity_id: binary_sensor.motionkitchen_occupancy
      state: "off"
  action:
    - service: notify.mobile_app_iphone
      data:
        title: "Home"
        message: "Enter Home"
        data:
          push:
            sound: default

- alias: Send Notification Opened Lock
  trigger:
    platform: state
    entity_id: binary_sensor.lock
    from: "off"
    to: "on"
  action:
    - service: notify.mobile_app_iphone
      data:
        message: "Lock Opened"
        data:
          actions:
            - action: "LOCK"
              title: 'Lock'
              activationMode: 'background'
              authenticationRequired: false
              destructive: false
              icon: "sfsymbols:lock"
            - action: "UNLOCK"
              title: 'Unlock'
              activationMode: 'background'
              authenticationRequired: false
              destructive: false
              icon: "sfsymbols:lock.open"

- alias: Send Notification Closed Lock
  trigger:
    platform: state
    entity_id: binary_sensor.lock
    from: "on"
    to: "off"
  action:
    - service: notify.mobile_app_iphone
      data:
        message: "Lock Closed"
        data:
          actions:
            - action: "UNLOCK"
              title: 'Unlock'
              activationMode: 'background'
              authenticationRequired: false
              destructive: false
              icon: "sfsymbols:lock.open"
            - action: "LOCK"
              title: 'Lock'
              activationMode: 'background'
              authenticationRequired: false
              destructive: false
              icon: "sfsymbols:lock"

# Vacuum
- alias: Send Notification Vacuum Start
  trigger:
    platform: state
    entity_id: vacuum.john
    from: "docked"
    to: "cleaning"
  action:
    - service: sonos.snapshot
      entity_id: all
    - service: notify.sonos
      data:
        message: "Odkurzacz rozpoczął sprzątanie mieszkania."
    - delay:
        seconds: 5
    - service: sonos.restore
      entity_id: all
    - service: notify.mobile_app_iphone
      data:
        message: "Vacuum Started Cleaning"
        data:
          actions:
            - action: "STOP"
              title: 'Stop'
              activationMode: 'background'
              authenticationRequired: false
              destructive: false
            - action: "START"
              title: 'Start'
              activationMode: 'background'
              authenticationRequired: false
              destructive: false
    # - service: notify.alexa_media
    #   data:
    #     target: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     data:
    #       type: tts
    #     message: "Clening House started."


- alias: Send Notification Vacuum Stop
  trigger:
    platform: state
    entity_id: vacuum.john
    from:
      - "cleaning"
      - "returning"
      - "idle"
    to: "docked"
  action:
    - service: sonos.snapshot
      entity_id: all
    - service: notify.sonos
      data:
        message: "Odkurzacz skończył odkurzanie mieszkania."
    - delay:
        seconds: 5
    - service: sonos.restore
      entity_id: all
    - service: notify.mobile_app_iphone
      data:
        message: "Vacuum Finished Cleaning"
        data:
          actions:
            - action: "START"
              title: 'Start'
              activationMode: 'background'
              authenticationRequired: false
              destructive: false
            - action: "STOP"
              title: 'Stop'
              activationMode: 'background'
              authenticationRequired: false
              destructive: false
    # - service: notify.alexa_media
    #   data:
    #     target: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     data:
    #       type: tts
    #     message: "Cleaning house ended."

- alias: "Very Bad Air"
  trigger:
    - platform: numeric_state
      entity_id: sensor.air_purifier_pm2_5
      above: 100
  action:
    - service: sonos.snapshot
      entity_id: all
    - service: notify.sonos
      data:
        message: "Uwaga! bardzo zła jakość powietrza w mieszkaniu."
    - delay:
        seconds: 5
    - service: sonos.restore
      entity_id: all
    - service: notify.mobile_app_iphone
      data:
        title: "Air"
        message: "Very Bad Air"
    # - service: notify.alexa_media
    #   data:
    #     target: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     data:
    #       type: tts
    #     message: "Warning, very bad air in all House."

- alias: Send Notification Enter Zone Home
  trigger:
    platform: zone
    entity_id: person.ania
    zone: zone.home
    event: enter
  condition:
    - condition: state
      entity_id: device_tracker.iphone_luci_andrzej
      state: "home" 
  action:
    - service: notify.mobile_app_iphone
      data:
        title: "Location"
        message: "Anna went into zone Home"
        data:
          push:
            category: map
            sound: default
          action_data:
            shows_traffic: true
            shows_compass: true
            shows_points_of_interest: true
            latitude: "{{ state_attr('device_tracker.xiaomi', 'latitude') }}"
            longitude: "{{ state_attr('device_tracker.xiaomi', 'longitude') }}"  

- alias: Send Notification Exit Home
  trigger:
    platform: state
    entity_id: binary_sensor.maindoor_contact
    from: "off"
    to: "on"
  condition:
    - condition: state
      entity_id: device_tracker.iphone_luci_andrzej
      state: "not_home"
    - condition: state
      entity_id: binary_sensor.motionkitchen_occupancy
      state: "on"
  action:
    - service: notify.mobile_app_iphone
      data:
        title: "Home"
        message: "Exit Home"
        data:
          push:
            sound: default 
    - delay:
        seconds: 10
    
- alias: Wpkiw Exit
  trigger:
    platform: zone
    entity_id: person.ania
    zone: zone.wpkiw
    event: leave
  action:
    - service: notify.mobile_app_iphone
      data:
        title: "Location"
        message: Anna left the WPKiW
        data:
          push:
            category: map
            sound: default
          action_data:
            shows_traffic: true
            shows_compass: true
            shows_points_of_interest: true
            latitude: "{{ state_attr('device_tracker.xiaomi', 'latitude') }}"
            longitude: "{{ state_attr('device_tracker.xiaomi', 'longitude') }}"
    - delay:
        seconds: 10

- alias: Wpkiw Enter
  trigger:
    platform: zone
    entity_id: person.ania
    zone: zone.wpkiw
    event: enter
  action: 
    - service: notify.mobile_app_iphone
      data:
        title: "Location"
        message: "Anna went into the WPKiW"
        data:
          push:
            category: map
            sound: default
          action_data:
            shows_traffic: true
            shows_compass: true
            shows_points_of_interest: true
            latitude: "{{ state_attr('device_tracker.xiaomi', 'latitude') }}"
            longitude: "{{ state_attr('device_tracker.xiaomi', 'longitude') }}"                          

- alias: Send Notification Leak Toilet
  trigger:
    platform: state
    entity_id: binary_sensor.leaksensortoilet_water_leak
    from: "off"
    to: "on"
  action:
    - service: sonos.snapshot
      entity_id: all
    - service: notify.sonos
      data:
        message: "Uwaga! Uwaga! Uwaga!, zalało łazienkę!."
    - delay:
        seconds: 5
    - service: sonos.restore
      entity_id: all
    - service: notify.mobile_app_iphone
      data:
        title: "Leak!"
        message: "Leak in toilet"
        data:
          push:
            sound: 
              name: default
              critical: 1
              volume: 1.0
    - service: light.turn_on
      data:
        brightness: 255
        rgb_color: [255, 0, 0]
        entity_id:
          - light.ikeabulblamp_light
          - light.philipsledoffice
    - service: switch.turn_off
      data:
        entity_id: switch.washermachine_relay  
    - service: notify.tv
      data:
        message: "Leak in toilet"
    - service: notify.mobile_app_xiaomi
      data:
        title: "Leak!"
        message: "Leak in toilet"  
        data:
          ttl: 0
          priority: high        
          action:
    # - service: media_player.play_media
    #   data:
    #     entity_id: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     media_content_type: sound
    #     media_content_id: amzn_sfx_doorbell_chime_01
    # - service: notify.alexa_media
    #   data:
    #     target: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     data:
    #       type: tts
    #     message: "Warning! Warning! Warning!. Leak in toilet."

- alias: Send Notification Leak Kitchen
  trigger:
    platform: state
    entity_id: binary_sensor.leaksensorkitchen_water_leak
    from: "off"
    to: "on"
  action:
    - service: sonos.snapshot
      entity_id: all
    - service: notify.sonos
      data:
        message: "Uwaga! Uwaga! Uwaga!, zalało kuchnię!."
    - delay:
        seconds: 5
    - service: sonos.restore
      entity_id: all
    - service: notify.mobile_app_iphone
      data:
        title: "Leak!"
        message: "Leak in kitchen"
        data:
          push:
            sound: 
              name: default
              critical: 1
              volume: 1.0
    - service: light.turn_on
      data:
        brightness: 255
        rgb_color: [255, 0, 0]
        entity_id:
          - light.ikeabulblamp_light 
          - light.philipsledoffice2
    - service: switch.turn_off
      data:
        entity_id: switch.dishwasher_relay   
    - service: notify.tv
      data:
        message: "Leak in kitchen"
    - service: notify.mobile_app_xiaomi
      data:
        title: "Leak!"
        message: "Leak in kitchen"     
        data:
          ttl: 0
          priority: high 
    # - service: notify.alexa_media
    #   data:
    #     target: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     data:
    #       type: tts
    #     message: "Warning! Warning! Warning!. Leak in kitchen."   

# Notification End Dishwasher
- alias: "Notification Dishwasher End"
  trigger:
    - platform: state
      entity_id: sensor.dishwasher
      from: "washing"
      to: "disable"
      for:
        minutes: 20
  action:
    - service: sonos.snapshot
      entity_id: all
    - service: notify.sonos
      data:
        message: "Zmywarka zakończyła zmywanie."
    - delay:
        seconds: 5
    - service: sonos.restore
      entity_id: all
    - service: notify.mobile_app_iphone
      data:
        title: "AGD"
        message: "Dishwasher Ended"
        data:
          push:
            sound: default   
    - service: notify.tv
      data:
        message: "Dishwasher Ended"
    - service: notify.mobile_app_xiaomi
      data:
        message: "Dishwasher Ended"
    # - service: media_player.play_media
    #   data:
    #     entity_id: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     media_content_type: sound
    #     media_content_id: amzn_sfx_doorbell_chime_01
    # - service: notify.alexa_media
    #   data:
    #     target: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     data:
    #       type: tts
    #     message: "Dishwasher ended."

- alias: "Notification Washermachine End"
  trigger:
    - platform: state
      entity_id: sensor.washermachine
      from: "washing"
      to: "disable"
      for:
        minutes: 5
  action:
    - service: sonos.snapshot
      entity_id: all
    - service: notify.sonos
      data:
        message: "Pralka zakończyła pranie."
    - delay:
        seconds: 5
    - service: sonos.restore
      entity_id: all
    - service: notify.mobile_app_iphone
      data:
        message: "Washermachine Ended"
        data:
          actions:
            - action: "STOP-WASHERMACHINE"
              title: 'Disable'
              activationMode: 'background'
              authenticationRequired: false
              destructive: false
            - action: "START-WASHERMACHINE"
              title: 'Enable'
              activationMode: 'background'
              authenticationRequired: false
              destructive: false
    - service: notify.tv
      data:
        message: "Washermachine Ended"
    - service: notify.mobile_app_xiaomi
      data:
        message: "Washermachine Ended"
    # - service: media_player.play_media
    #   data:
    #     entity_id: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     media_content_type: sound
    #     media_content_id: amzn_sfx_doorbell_chime_01
    # - service: notify.alexa_media
    #   data:
    #     target: 
    #       - media_player.echo_dot_3
    #       - media_player.echo_dot_4
    #     data:
    #       type: tts
    #     message: "Washermachine ended."

- alias: "Notification Storm Nearby"
  trigger:
    - platform: state
      entity_id: binary_sensor.burze_dzis_net_storms_nearby
      from: 'off'
      to: 'on'  
  action:
    - service: notify.mobile_app_iphone
      data:
        title: "Storm"
        message: "Storm nearby"
        data:
          push:
            sound: 
              name: default
              critical: 1
              volume: 1.0

- alias: "Notification Storm Warning"
  trigger:
    - platform: state
      entity_id: binary_sensor.burze_dzis_net_storm_warning
      from: 'off'
      to: 'on'   
  action:
    - service: notify.mobile_app_iphone
      data:
        title: "Weather"
        message: "Storm warning"
        data:
          push:
            sound: 
              name: default
              critical: 1
              volume: 1.0

- alias: "Notification Heat Warning"
  trigger:
    - platform: state
      entity_id: binary_sensor.burze_dzis_net_heat_warning
      from: 'off'
      to: 'on'    
  action:
    - service: notify.mobile_app_iphone
      data:
        title: "Weather"
        message: "Heat warning"
        data:
          push:
            sound: 
              name: default
              critical: 1
              volume: 1.0

- alias: "Notification Wind Warning"
  trigger:
    - platform: state
      entity_id: binary_sensor.burze_dzis_net_wind_warning
      from: 'off'
      to: 'on'  
  action:
    - service: notify.mobile_app_iphone
      data:
        title: "Weather"
        message: "Wind warning"
        data:
          push:
            sound: 
              name: default
              critical: 1
              volume: 1.0

- alias: Doorbell
  trigger:  
    platform: state
    entity_id: sensor.ringvibration_action
    to: vibration   
  action:
    - service: notify.mobile_app_iphone
      data:
        title: "Doorbell"
        message: "Ring ring maindoor"
        data:
          push:
            sound: 
              name: default
    - service: notify.mobile_app_xiaomi
      data:
        message: "Ring ring maindoor"
    - service: notify.tv
      data:
        message: "Ring ring maindoor" 
    - delay:
        seconds: 10

- alias: "Notification Low Battery"
  trigger:
    platform: time
    at: "18:00:00"
  condition:
    condition: template
    value_template: >
      {% macro battery_level() %}
        {%- set threshold = 20 -%}
        {%- set domains = ['light', 'switch', 'sensor', 'lock', 'binary_sensor'] -%}
        {% for domain in domains -%}
          {% for item in states[domain] if (((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ('battery' in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == 'low' or item.state | lower == 'unknown')))) and not (( 'humidity' in item.entity_id) or ('illumination' in item.entity_id)) -%}
            {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) %}
              - {{ item.entity_id }} [{{ item.attributes['battery_level'] | round(0) }}%]{% endif -%}
            {% if 'battery' in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == 'low' or item.state | lower == 'unknown') %}
              - {{ item.entity_id }} [{{ item.state | round(0) }}%]{% endif -%}
          {% endfor %}
        {%- endfor %}
      {% endmacro %}
      {{ battery_level() | trim != '' }}
  action:
    service: notify.mobile_app_iphone
    data:
      message: >
          {% macro battery_level() %}
            {%- set threshold = 20 -%}
            {%- set domains = ['light', 'switch', 'sensor', 'lock', 'binary_sensor'] -%}
            {% for domain in domains -%}
              {% for item in states[domain] if (((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ('battery' in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == 'low' or item.state | lower == 'unknown')))) and not (( 'humidity' in item.entity_id) or ('illumination' in item.entity_id)) -%}
                {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) %}
           - {{ item.entity_id }} [{{ item.attributes['battery_level'] | round(0) }}%]{% endif -%}
                {% if 'battery' in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == 'low' or item.state | lower == 'unknown') %}
           - {{ item.entity_id }} [{{ item.state | round(0) }}%]{% endif -%}
              {% endfor %}
            {%- endfor %}
          {% endmacro %}
          Low Battery {{ battery_level() }}
      data:
        push:
          sound: default 


